<?xml version="1.0"?>
<!--
(c) 2005-2015 Copyright, Real-Time Innovations.  All rights reserved.
No duplications, whole or partial, manual or electronic, may be made
without express written permission.  Any such copies, or revisions thereof,
must display this notice unaltered.
This code contains trade secrets of Real-Time Innovations, Inc.
 -->

<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/6.0.0/rti_dds_profiles.xsd" version="6.0.0">

    <!-- Qos Library -->
	<qos_library name="QosLibrary">
		<qos_profile name="DefaultProfile"
					 base_name="BuiltinQosLibExp::Generic.StrictReliable"
					 is_default_qos="true">
			<participant_qos>
				<transport_builtin>
				    <mask>UDPV4 | SHMEM</mask>
				</transport_builtin>

				<!-- Turn on monitoring -->
				<!-- Begin Monitoring
				<property>
					<value>
						<element>
							<name>rti.monitor.library</name>
							<value>rtimonitoring</value>
						</element>
						<element>
							<name>rti.monitor.create_function_ptr</name>
							<value>$(NDDS_MONITOR)</value>
						</element>
					</value>
				</property>
				 End Monitoring -->
			</participant_qos>
		</qos_profile>
	</qos_library>

    <!-- types -->
    <types>
		<module name="geometry_msgs">
  			<module name="msg">
				<struct name= "Vector3">
					<member name="x" type="float64"/>
					<member name="y" type="float64"/>
					<member name="z" type="float64"/>
				</struct>
				<struct name= "Twist">
					<member name="linear" type="nonBasic"  nonBasicTypeName="Vector3"/>
					<member name="angular" type="nonBasic"  nonBasicTypeName="Vector3"/>
				</struct>
			</module>
		</module>
		<module name="sensor_msgs">
			<module name="msg">
				<struct name= "JointState">
					<member name="header" type="nonBasic"  nonBasicTypeName= "std_msgs::msg::Header"/>
					<member name="name" sequenceMaxLength="-1" type="string"/>
					<member name="position" sequenceMaxLength="-1" type="float64"/>
					<member name="velocity" sequenceMaxLength="-1" type="float64"/>
					<member name="effort" sequenceMaxLength="-1" type="float64"/>
				</struct>
			</module>
		</module>
		<module name="std_msgs">
			<module name="msg">
				<struct name= "Header">
					<member name="stamp" type="nonBasic"  nonBasicTypeName= "std_msgs::msg::Time"/>
					<member name="frame_id" type="string"/>
				</struct>
			</module>
			<module name="msg">
				<struct name= "Time" nested="true">
					<member name="sec" type="int32"/>
					<member name="nanosec" type="uint32"/>
				</struct>
			</module>

		</module>
		
	</types>


    <!-- Domain Library -->
    <domain_library name="MyDomainLibrary">
        <domain name="MyDomain" domain_id="0">
            <register_type name="geometry_msgs::msg::Twist"  type_ref="geometry_msgs::msg::Twist"/>
            <topic name="cmd_vel"    register_type_ref="geometry_msgs::msg::Twist"/>
			<register_type name="sensor_msgs::msg::JointState"  type_ref="sensor_msgs::msg::JointState"/>
            <topic name="joint"    register_type_ref="sensor_msgs::msg::JointState"/>

        </domain>
    </domain_library>


    <!-- Participant library -->
    <domain_participant_library name="MyParticipantLibrary">
      <domain_participant name="Zero" domain_ref="MyDomainLibrary::MyDomain">

        <publisher name="MyPublisher">
				  <data_writer name="DiffDriveWriter" topic_ref="cmd_vel" />
        </publisher>

        <subscriber name="MySubscriber">
          <data_reader name="DiffDriveReader" topic_ref="joint" />
        </subscriber>

		  </domain_participant>
   </domain_participant_library>
</dds>
